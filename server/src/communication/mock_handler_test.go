// Code generated by MockGen. DO NOT EDIT.
// Source: server/src/communication/handler.go

// Package communication is a generated GoMock package.
package communication

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServerStateHandler is a mock of ServerStateHandler interface.
type MockServerStateHandler struct {
	ctrl     *gomock.Controller
	recorder *MockServerStateHandlerMockRecorder
}

// MockServerStateHandlerMockRecorder is the mock recorder for MockServerStateHandler.
type MockServerStateHandlerMockRecorder struct {
	mock *MockServerStateHandler
}

// NewMockServerStateHandler creates a new mock instance.
func NewMockServerStateHandler(ctrl *gomock.Controller) *MockServerStateHandler {
	mock := &MockServerStateHandler{ctrl: ctrl}
	mock.recorder = &MockServerStateHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerStateHandler) EXPECT() *MockServerStateHandlerMockRecorder {
	return m.recorder
}

// BroadcastStatusList mocks base method.
func (m *MockServerStateHandler) BroadcastStatusList(worker ClientWorker) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BroadcastStatusList", worker)
}

// BroadcastStatusList indicates an expected call of BroadcastStatusList.
func (mr *MockServerStateHandlerMockRecorder) BroadcastStatusList(worker interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BroadcastStatusList", reflect.TypeOf((*MockServerStateHandler)(nil).BroadcastStatusList), worker)
}

// DeleteRoom mocks base method.
func (m *MockServerStateHandler) DeleteRoom(room RoomStateHandler) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteRoom", room)
}

// DeleteRoom indicates an expected call of DeleteRoom.
func (mr *MockServerStateHandlerMockRecorder) DeleteRoom(room interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRoom", reflect.TypeOf((*MockServerStateHandler)(nil).DeleteRoom), room)
}

// HandleJoin mocks base method.
func (m *MockServerStateHandler) HandleJoin(join Join, worker ClientWorker) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleJoin", join, worker)
}

// HandleJoin indicates an expected call of HandleJoin.
func (mr *MockServerStateHandlerMockRecorder) HandleJoin(join, worker interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleJoin", reflect.TypeOf((*MockServerStateHandler)(nil).HandleJoin), join, worker)
}
